listen 80;
root /app/web;
index index.php;
autoindex off;
charset UTF-8;

add_header X-Content-Type-Options nosniff;
add_header X-XSS-Protection "1; mode=block";
add_header X-Frame-Options SAMEORIGIN;

location / {
    try_files $uri $uri/ /index.php$is_args$args;
}

location ~ \.php(/|$) {
    internal;

    fastcgi_pass 127.0.0.1:9000;
    fastcgi_buffers 1024 4k;

    fastcgi_read_timeout 600s;
    fastcgi_connect_timeout 600s;

    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME  $document_root$fastcgi_script_name;

    # regex to split $uri to $fastcgi_script_name and $fastcgi_path
    fastcgi_split_path_info ^(.+\.php)(/.+)$;

    # Check that the PHP script exists before passing it
    try_files $fastcgi_script_name =404;

    # Bypass the fact that try_files resets $fastcgi_path_info
    # see: http://trac.nginx.org/nginx/ticket/321
    set $path_info $fastcgi_path_info;
    fastcgi_param PATH_INFO $path_info;

    include fastcgi_params;

    fastcgi_param APP_ENV $env;
    fastcgi_param APP_DEBUG 1;
    fastcgi_param HTTPS off;
}

location ~* (\.php$|\.htaccess$|\.git) {
    deny all;
}

# serve static files directly
location ~* \.(jpg|jpeg|gif|css|png|js|ico|html)$ {
    access_log off;
    expires max;
}

# removes trailing slashes (prevents SEO duplicate content issues)
if (!-d $request_filename) {
    rewrite ^/(.+)/$ /$1 permanent;
}

# unless the request is for a valid file (image, js, css, etc.), send to bootstrap
if (!-e $request_filename) {
    rewrite ^/(.*)$ /index.php?/$1 last;
    break;
}

# removes trailing 'index' from all controllers
if ($request_uri ~* index/?$) {
    rewrite ^/(.*)/index/?$ /$1 permanent;
}
